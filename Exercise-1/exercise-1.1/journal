Exercise 1.1: Getting Started with Python 
Learning Goals 

- Summarize the uses and benefits of Python for web development
- Prepare your developer environment for programming with Python

Reflection Questions

1. In your own words, what is the difference between frontend and backend web development? If you were hired to work on backend programming for a web application, what kinds of operations would you be working on?

Frontend development focuses on designing and implementing the visual and interactive elements of the web application. It involves creating the user interface, where developers work on the client-side of the application.

Backend development involves working on the server-side of the application. it focuses on creating the server infrastructure, databases, and application logic required to make the front-end function smoothly.

If I were hired to work on backend programming for a web application, I would be working on server logic, database management, API development, authentication & authorization, caching, etc.

2. Imagine you’re working as a full-stack developer in the near future. Your team is asking for your advice on whether to use JavaScript or Python for a project, and you think Python would be the better choice. How would you explain the similarities and differences between the two languages to your team? Drawing from what you learned in this Exercise, what reasons would you give to convince your team that Python is the better option? 
(Hint: refer to the Exercise section “The Benefits of Developing with Python”)

Python is a versatile language used for various purposes, and Javascript is primarily used for front-end web development. Python is known for its clean and readable syntax, it's easier to understand and maintain. JS's syntax can sometimes be considered more complex (mostly because of callbacks and nested functions). In addition to it, python has simple built-in package management and strong community support.

I would have also highlighted why the is more suitable for the project we're going to work on, depending on the context of the project. 

3. Now that you’ve had an introduction to Python, write down 3 goals you have for yourself and your learning during this Achievement. You can reflect on the following questions if it helps you. What do you want to learn about Python? What do you want to get out of this Achievement? Where or what do you see yourself working on after you complete this Achievement?

I want to learn object-oriented programming. Python is a very popular programming language, and it would be beneficial for aspiring web developers to learn it as it is used in various business sectors.
Throughout this achievement, I would like to learn the foundational concepts of Python, and then progressively enhance my skills on more advanced projects. Ultimately, I want to expand my portfolio with more projects that showcase my growing proficiency in Python programming.
After I complete this achievement I will keep learning and practicing coding to gain confidence to apply for developer jobs. 